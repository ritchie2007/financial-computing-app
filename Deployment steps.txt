2020-10-17 CRM-server Ubuntu Desktop 18.04
(1) root@ubuntu:/home/ritchie# python3 -V
Python 3.6.9
(2) apt install python3-pip
(3) root@ubuntu:/home/ritchie# pip3 -V
pip 9.0.1 from /usr/lib/python3/dist-packages (python 3.6)
(4) root@ubuntu:/home/ritchie# apt install python3-venv
(5) root@ubuntu:/home/ritchie# cd Documents
root@ubuntu:/home/ritchie/Documents# mkdir shares
root@ubuntu:/home/ritchie/Documents# /usr/bin/vmhgfs-fuse .host:/ /home/ritchie/Documents/shares -o subtype=vmhgfs-fuse,allow_other
(6) root@ubuntu:/home/ritchie# cd /var
root@ubuntu:/var#
root@ubuntu:/var# mkdir www
root@ubuntu:/var# cd www
root@ubuntu:/var/www# mkdir html
root@ubuntu:/var/www# cd html
(7) Copy files:
root@ubuntu:/var/www/html# cp -r /home/ritchie/Documents/shares/financial-computing-app/requirements.txt /var/www/html/
root@ubuntu:/var/www/html# cp -r /home/ritchie/Documents/shares/financial-computing-app/app /var/www/html/
root@ubuntu:/var/www/html# cp -r /home/ritchie/Documents/shares/financial-computing-app/financial_computing_app.py /var/www/html/
(8) root@ubuntu:/var/www/html# python3 -m venv venv
(9) root@ubuntu:/var/www/html# source venv/bin/activate
(venv) root@ubuntu:/var/www/html# 
(10) (venv) root@ubuntu:/var/www/html# pip3 install wheel
(venv) root@ubuntu:/var/www/html# pip3 install openpyxl
(venv) root@ubuntu:/var/www/html# pip3 install -r requirement.txt
(11) (venv) root@ubuntu:/var/www/html# python3 financial_computing_app.py 
只显示下时间就结束了，原因在financial_computing_app.py文件
(venv) root@ubuntu:/var/www/html# nano financial_computing_app.py 

from app import app
if __name__ == "__main__":

添加下面两行：
if __name__ == "__main__":
        app.run()
然后contr + o保存，contr + x退出
再试(venv) root@ubuntu:/var/www/html# python3 financial_computing_app.py 正常运行
(12) root@ubuntu:/home/ritchie# apt install net-tools 安装后ifconfig就可以运行，查看ip地址
(13) 再试(venv) root@ubuntu:/var/www/html# flask run --host=0.0.0.0 正常运行

(14) (venv) root@ubuntu:/var/www/html# pip3 --version和pip --version是一样的
所以安装gunicorn也可以用 pip install： (venv) root@ubuntu:/var/www/html# pip install gunicorn
(15) (venv) root@ubuntu:/var/www/html# gunicorn -w 4 -b 192.168.174.133:5000 --access-logfile log financial_computing_app:app
-w 4表示开启4个进程，-b表示绑定在哪个ip和端口，--access-logfile 文件目录及文件名 表示把log写在哪个文件，financial_computing_app:app表示入口文件和module（app=Flask(__name__)就是这个'app')）
另外： 目前是在终端情况下运行，必须保持terminal目前状态，不能做其他事情
如想在后台运行，则加入 -D参数即可
(venv) root@ubuntu:/var/www/html# gunicorn -w 4 -b 192.168.174.133:5000 -D --access-logfile log financial_computing_app:app
用(venv) root@ubuntu:/var/www/html# ps aux | grep gunicorn检查下，发现5个线程在后台运行，是1个主进程+4个进程，所以是5个
关闭后台运行，需要用kill： 
(venv) root@ubuntu:/var/www/html# ps aux | grep gunicorn
root      17377  0.0  0.9  66364 19396 ?        S    16:46   0:00 /var/www/html/venv/bin/python3 /var/www/html/venv/bin/gunicorn -w 4 -b 192.168.174.133:5000 -D --access-logfile log financial_computing_app:app
root      17381  0.1  2.7 120216 55720 ?        S    16:46   0:00 /var/www/html/venv/bin/python3 /var/www/html/venv/bin/gunicorn -w 4 -b 192.168.174.133:5000 -D --access-logfile log financial_computing_app:app
root      17382  0.1  2.7 120216 55720 ?        S    16:46   0:00 /var/www/html/venv/bin/python3 /var/www/html/venv/bin/gunicorn -w 4 -b 192.168.174.133:5000 -D --access-logfile log financial_computing_app:app
root      17383  0.1  2.7 120216 55724 ?        S    16:46   0:00 /var/www/html/venv/bin/python3 /var/www/html/venv/bin/gunicorn -w 4 -b 192.168.174.133:5000 -D --access-logfile log financial_computing_app:app
root      17408  1.1  2.7 120224 55744 ?        S    16:58   0:00 /var/www/html/venv/bin/python3 /var/www/html/venv/bin/gunicorn -w 4 -b 192.168.174.133:5000 -D --access-logfile log financial_computing_app:app
root      17422  0.0  0.0  14424  1084 pts/0    S+   17:00   0:00 grep --color=auto gunicorn
(venv) root@ubuntu:/var/www/html# kill -9 17377
关了主进程17377，其他的4个进程也跟着关掉了（需要点时间）

(16) 如何同时开启2个或多个终端呢：把port端口写成不同即可，如（之前是5000，现在写成5001）
(venv) root@ubuntu:/var/www/html# gunicorn -w 4 -b 192.168.174.133:5001

(17) (venv) root@ubuntu:/var/www/html# apt install nginx
(18) root@ubuntu:/home/ritchie# ps aux | grep nginx 查看正在运行
(19) root@ubuntu:/home/ritchie# nano /etc/nginx/sites-available/default 修改这个文件进行设置

        server_name _;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
插入下面6行：(注意句尾的；号)
                proxy_pass http://localhost:5000/;
                proxy_redirect off;

                proxy_set_header Host $http_post;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

(20) 重启 nginx： root@ubuntu:/var/www/html# /etc/init.d/nginx restart
[ ok ] Restarting nginx (via systemctl): nginx.service.
(21) root@ubuntu:/var/www/html# /etc/init.d/nginx stop




-----------------
CRM-Server-UbuntuDesktop18.04
(1) Install UbuntuDesktop18.04 & Update software & Change timezone
(2) ritchie@ubuntu:~$ sudo apt-get install python3.8 >>> ritchie@ubuntu:~$ python3 --version  >>> Python 3.6.9
(3) ritchie@ubuntu:~$ sudo apt install apache2
(4) ritchie@ubuntu:~$ sudo apt install python3-pip virtualenv >>> ritchie@ubuntu:~$ pip3 --version
pip 9.0.1 from /usr/lib/python3/dist-packages (python 3.6)
(5) ritchie@ubuntu:~$ cd /var/www/html/
(6) ritchie@ubuntu:/var/www/html$ sudo mkdir site
(7) ritchie@ubuntu:/var/www/html$ cd site
(8) ritchie@ubuntu:/var/www/html/site$ sudo virtualenv venv
The path python2 (from --python=python2) does not exist <<<报错
(9) ritchie@ubuntu:/var/www/html/site$ sudo virtualenv --python=python3 venv <<<解决
(10) 共享文件夹，先在vmvare里面设置，然后ubuntu里面要使用mount命令：
---> ritchie@ubuntu:~/Documents$ sudo mkdir shares
---> ritchie@ubuntu:~/Documents$ sudo /usr/bin/vmhgfs-fuse .host:/ /home/ritchie/Documents/shares -o subtype=vmhgfs-fuse,allow_other
ritchie@ubuntu:~/Documents$ cd /var/www/html/site
(11) Copy files:
---> ritchie@ubuntu:/var/www/html/site$ sudo cp -r /home/ritchie/Documents/shares/financial-computing-app/requirements.txt /var/www/html/site
---> ritchie@ubuntu:/var/www/html/site$ sudo cp -r /home/ritchie/Documents/shares/financial-computing-app/app /var/www/html/site
(12) ritchie@ubuntu:/var/www/html/site$ . vevn/bin/activate 运行virtual环境
(13) 安装requirement.txt中的plugin： sudo pip3 install -r requirement.txt
测试一下：
(14) ritchie@ubuntu:/var/www/html/site$ python3 >>> import flask >>> exit()
(15) ritchie@ubuntu:/var/www/html/site$ python3 init >>> 应该成功启动server


codeworked@ubuntu:/$ sudo apt install apache2 进入browser键入localhost网址显示apache默认界面，就是/var/www/index.html
codeworked@ubuntu:/$ python3 --version
codeworked@ubuntu:/$ sudo apt install python3-pip virtualenv
codeworked@ubuntu:/$ pip3 --version
codeworked@ubuntu:/$ cd /var/www/html
codeworked@ubuntu:/var/www/html$ sudo mkdir site
codeworked@ubuntu:/var/www/html$ cd site
codeworked@ubuntu:/var/www/html/site$ sudo mkdir static templates
codeworked@ubuntu:/var/www/html/site$ sudo virtualenv venv
codeworked@ubuntu:/var/www/html/site$ sudo nano init.py

from flask import Flask
app = Flask(__name__)

@app.route("/")
def index():
   retrun "Hello World"

if __name__ == "__main__":
   app.run()

codeworked@ubuntu:/var/www/html/site$ . venv/bin/activate 注意点后面有个空格
codeworked@ubuntu:/var/www/html/site$ python3 init.py >>> run successfully

codeworked@ubuntu:/var/www/html/site$ sudo apt install libapache2-mod-wsgi-py3
codeworked@ubuntu:/var/www/html/site$ sudo nano /etc/apache2/sites-available/000-defautl.conf

WSGIScriptAlias / / var/www/html/site/app.wsgi
<Directory /var/www/html/site>
  Order allow,deny
  Allow from  all
</Directory>

codeworked@ubuntu:/var/www/html/site$ sudo nano app.wsgi

import sys
sys.path.inset(0, "/var/www/html/site")
from init import app as application

codeworked@ubuntu:/var/www/html/site$ sudo service apache2 restart
------ advanced -----

codeworked@ubuntu:/var/www/html/site$ sudo nano init.py

activate_this_file = "/var/www/html/site/venv/bin/activate_this.py"
with open(activate_this_file) as _file:
   exec(_file.read(), dict(__file__ = activate_this_file))

from flask import Flask
app = Flask(__name__)

@app.route("/")
def index():
   retrun "Hello World"
@app.route("/done")
def done():
   return "we are done with setup of flask ...."

# if __name__ == "__main__":
#   app.run()

codeworked@ubuntu:/var/www/html/site$ sudo service apache2 restart


sudo systemctl status apache2.service -l --no-pager
sudo systemctl status httpd.service -l --no-pager
sudo journalctl -u apache2.service --since today --no-pager
sudo journalctl -u httpd.service --since today --no-pager
/etc/apache2/
sudo apachectl configtest

sudo nano /etc/apache2/apache2.conf

